{"version":3,"file":"/js/portal/home.js","mappings":"mBAEA,IAAMA,EAAaC,SAASC,cAAc,aAEvB,OAAfF,IACAA,EAAWG,QAAU,SAACC,GAClBA,EAAMC,iBACN,IAAIC,EAAOL,SAASC,cAAc,0BAC9BK,ECPK,SDOaN,SAASC,cAAc,aAAaM,aAAa,eAEvEC,QAAQC,IAAIH,GAEZD,EAAKK,iBAAiB,eAAeC,SAAQ,SAACC,GAC3B,WAAXA,EAAEC,MAAgC,eAAXD,EAAEC,OACzBD,EAAEE,SAAWR,EAEbE,QAAQC,IAAIG,EAAEE,cAKtBd,SAASC,cAAc,wBAAwBa,SAAWR,EAC1DN,SAASC,cAAc,0BAA0Ba,SAAWR,EAC5DN,SAASC,cAAc,wBAAwBa,SAAWR,EAC1DN,SAASC,cAAc,sBAAsBa,SAAWR,EAExD,IAAIS,EAAM,OACNT,IACAS,EAAM,SAGVf,SAASC,cAAc,aAAae,gBAAgB,eACpDhB,SAASC,cAAc,aAAagB,aAAa,cAAeF,M","sources":["webpack:///./resources/js/portal/home.js","webpack:///./resources/js/functions.js"],"sourcesContent":["import {strToBool} from \"../functions\";\n\nconst editButton = document.querySelector(\"#openEdit\");\n\nif (editButton !== null) {\n    editButton.onclick = (event) => {\n        event.preventDefault();\n        let form = document.querySelector(\"form[name=editProfile]\");\n        let isAct = strToBool(document.querySelector(\"#openEdit\").getAttribute(\"data-active\"))\n\n        console.log(isAct)\n\n        form.querySelectorAll(\"input[name]\").forEach((e) => {\n            if (e.name !== \"_token\" && e.name !== \"submitEdit\") {\n                e.disabled = isAct;\n                //e.setAttribute(\"disabled\");\n                console.log(e.disabled)\n\n            }\n        })\n\n        document.querySelector(\"textarea[name=about]\").disabled = isAct;\n        document.querySelector(\"textarea[name=hobbies]\").disabled = isAct;\n        document.querySelector(\"select[name=country]\").disabled = isAct;\n        document.querySelector(\"input[type=submit]\").disabled = isAct;\n\n        let dis = \"true\";\n        if (isAct) { // сука сраный джаваскрипт блять, ебись ты лошадью сука\n            dis = \"false\";\n        }\n\n        document.querySelector(\"#openEdit\").removeAttribute(\"data-active\")\n        document.querySelector(\"#openEdit\").setAttribute(\"data-active\", dis)\n    }\n}\n","function strToBool(x) {\n    return x === \"true\";\n}\n\nfunction resetAttribute(elem, attr, value) {\n    elem.removeAttribute(attr)\n    elem.setAttribute(attr, value)\n}\n\nconst SKILLS_LEVEL_CLASSES = [\n    \"\",\n    \"is-link\",\n    \"is-info\",\n    \"is-warning\",\n    \"is-primary\"\n];\n\nfunction setupTypewriter(t) {\n    var HTML = t.innerHTML;\n\n    t.innerHTML = \"\";\n\n    var cursorPosition = 0,\n        tag = \"\",\n        writingTag = false,\n        tagOpen = false,\n        typeSpeed = 50,\n        tempTypeSpeed = 0;\n\n    var type = function() {\n\n        if (writingTag === true) {\n            tag += HTML[cursorPosition];\n        }\n\n        if (HTML[cursorPosition] === \"<\") {\n            tempTypeSpeed = 0;\n            if (tagOpen) {\n                tagOpen = false;\n                writingTag = true;\n            } else {\n                tag = \"\";\n                tagOpen = true;\n                writingTag = true;\n                tag += HTML[cursorPosition];\n            }\n        }\n        if (!writingTag && tagOpen) {\n            tag.innerHTML += HTML[cursorPosition];\n        }\n        if (!writingTag && !tagOpen) {\n            if (HTML[cursorPosition] === \" \") {\n                tempTypeSpeed = 0;\n            }\n            else {\n                tempTypeSpeed = (Math.random() * typeSpeed) + 50;\n            }\n            t.innerHTML += HTML[cursorPosition];\n        }\n        if (writingTag === true && HTML[cursorPosition] === \">\") {\n            tempTypeSpeed = (Math.random() * typeSpeed) + 50;\n            writingTag = false;\n            if (tagOpen) {\n                var newSpan = document.createElement(\"span\");\n                t.appendChild(newSpan);\n                newSpan.innerHTML = tag;\n                tag = newSpan.firstChild;\n            }\n        }\n\n        cursorPosition += 1;\n        if (cursorPosition < HTML.length - 1) {\n            setTimeout(type, tempTypeSpeed);\n        }\n\n    };\n\n    return {\n        type: type\n    };\n}\n\n\nexport { strToBool, resetAttribute, SKILLS_LEVEL_CLASSES, setupTypewriter };\n"],"names":["editButton","document","querySelector","onclick","event","preventDefault","form","isAct","getAttribute","console","log","querySelectorAll","forEach","e","name","disabled","dis","removeAttribute","setAttribute"],"sourceRoot":""}